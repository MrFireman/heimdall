apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: heimdall
  metadata: null
  name: heimdall
  namespace: monitoring
---
apiVersion: v1
data:
  4xx-rate-deployment.tmpl: |
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      name: {{.Namespace}}-{{.Name}}-4xx-rate-deployment
      namespace: {{.Namespace}}
      labels:
        prometheus: {{.NSPrometheus}}
        role: alert-rules
    spec:
      groups:
      - name: {{.Namespace}}-{{.Name}}-4xx-rate-deployment.rules
        rules:
        - alert: {{.Name}}-4xx-rate-deployment
          annotations:
            summary: |
              {{.Identifier}}: 4xx proportion above {{.Threshold}} for 1m
          expr: |
            (
              sum(
                rate(
                  http_requests_total{namespace="{{.Namespace}}",app="{{index .Selector "app"}}"{{if index .Selector "env"}},env="{{index .Selector "env"}}"{{end}},status=~"4.."}[30s]
                )
              )
              /
              sum(
                rate(
                  http_requests_total{namespace="{{.Namespace}}",app="{{index .Selector "app"}}"{{if index .Selector "env"}},env="{{index .Selector "env"}}"{{end}}}[30s]
                )
              )
            ) > {{.Threshold}}
          for: 1m
          labels:
            identifier: {{.Identifier}}
            name: {{.Name}}-4xx-rate-deployment
            namespace: {{.Namespace}}
            deployment: {{.Name}}
  5xx-rate-deployment.tmpl: |-
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      name: {{.Namespace}}-{{.Name}}-5xx-rate-deployment
      namespace: {{.Namespace}}
      labels:
        prometheus: {{.NSPrometheus}}
        role: alert-rules
    spec:
      groups:
      - name: {{.Namespace}}-{{.Name}}-5xx-rate-deployment.rules
        rules:
        - alert: {{.Name}}-5xx-rate-deployment
          annotations:
            summary: |
              {{.Identifier}}: 5xx proportion above {{.Threshold}} for 1m
          expr: |
            (
              sum(
                rate(
                  http_requests_total{namespace="{{.Namespace}}",app="{{index .Selector "app"}}"{{if index .Selector "env"}},env="{{index .Selector "env"}}"{{end}},status=~"5.."}[30s]
                )
              )
              /
              sum(
                rate(
                  http_requests_total{namespace="{{.Namespace}}",app="{{index .Selector "app"}}"{{if index .Selector "env"}},env="{{index .Selector "env"}}"{{end}}}[30s]
                )
              )
            ) > {{.Threshold}}
          for: 1m
          labels:
            identifier: {{.Identifier}}
            name: {{.Name}}-5xx-rate-deployment
            namespace: {{.Namespace}}
            deployment: {{.Name}}
  5xx-rate.tmpl: |
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      name: {{.Namespace}}-{{.Name}}-5xx-rate
      namespace: ingress
      labels:
        role: alert-rules
    spec:
      groups:
      - name: {{.Namespace}}-{{.Name}}-5xx-rate.rules
        rules:
        - alert: {{.Name}}-5xx-rate
          annotations:
            summary: |
              {{.Identifier}}: 5xx proportion above {{.Threshold}} for 1m
          expr: |
            (
              sum(
                rate(
                  nginx_ingress_controller_requests{exported_namespace="{{.Namespace}}",ingress="{{.Name}}",status=~"5.."}[30s]
                )
              )
              /
              sum(
                rate(
                  nginx_ingress_controller_requests{exported_namespace="{{.Namespace}}",ingress="{{.Name}}"}[30s]
                )
              )
            ) > {{.Threshold}}
          for: 1m
          labels:
            identifier: {{.Identifier}}
            name: {{.Name}}-5xx-rate
            namespace: {{.Namespace}}
  p95-deployment.tmpl: |
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      name: {{.Namespace}}-{{.Name}}-p95-deployment
      namespace: {{.Namespace}}
      labels:
        prometheus: {{.NSPrometheus}}
        role: alert-rules
    spec:
      groups:
      - name: {{.Namespace}}-{{.Name}}-p95-deployment.rules
        rules:
        - alert: {{.Name}}-p95-deployment
          annotations:
            summary: |
              {{.Identifier}}: P95 above {{.Threshold}} for 5m
          expr: |
            (
              histogram_quantile(
                0.95, sum(
                  rate(
                    http_request_duration_seconds_bucket{namespace="{{.Namespace}}",app="{{index .Selector "app"}}"{{if index .Selector "env"}},env="{{index .Selector "env"}}"{{end}}}[5m]
                  )
                ) by (le)
              ) ) > {{.Threshold}}
          for: 1m
          labels:
            identifier: {{.Identifier}}
            name: {{.Name}}-p95-deployment
            namespace: {{.Namespace}}
            deployment: {{.Name}}
  p99-deployment.tmpl: |-
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      name: {{.Namespace}}-{{.Name}}-p99-deployment
      namespace: {{.Namespace}}
      labels:
        prometheus: {{.NSPrometheus}}
        role: alert-rules
    spec:
      groups:
      - name: {{.Namespace}}-{{.Name}}-p99-deployment.rules
        rules:
        - alert: {{.Name}}-p99-deployment
          annotations:
            summary: |
              {{.Identifier}}: P99 above {{.Threshold}} for 5m
          expr: |
            (
              histogram_quantile(
                0.99, sum(
                  rate(
                    http_request_duration_seconds_bucket{namespace="{{.Namespace}}",app="{{index .Selector "app"}}"{{if index .Selector "env"}},env="{{index .Selector "env"}}"{{end}}}[5m]
                  )
                ) by (le)
              ) ) > {{.Threshold}}
          for: 1m
          labels:
            identifier: {{.Identifier}}
            name: {{.Name}}-p99-deployment
            namespace: {{.Namespace}}
            deployment: {{.Name}}
  replicas-availability-deployment.tmpl: "---\napiVersion: monitoring.coreos.com/v1\nkind:
    PrometheusRule\nmetadata:\n  name: {{.Namespace}}-{{.Name}}-replicas-availability-deployment\n
    \ namespace: {{.Namespace}}\n  labels:\n    prometheus: kube-system\n    role:
    alert-rules\nspec:\n  groups:\n  - name: {{.Namespace}}-{{.Name}}-replicas-availability-deployment.rules\n
    \   rules:\n    - alert: {{.Name}}-replicas-availability-deployment\n      annotations:\n
    \       summary: |\n          {{.Identifier}}: Availability proportion over the
    requested amount of replicas {{.Threshold}} for 5m\n      expr: |\n        kube_deployment_status_replicas_available{namespace=\"{{.Namespace}}\",
    deployment=\"{{.Name}}\"} \n        /  \n        kube_deployment_spec_replicas{namespace=\"{{.Namespace}}\",
    deployment=\"{{.Name}}\"} > {{.Threshold}}\n      for: 5m\n      labels:\n        identifier:
    {{.Identifier}}\n        name: {{.Name}}-replicas-availability-deployment\n        namespace:
    {{.Namespace}}\n        deployment: {{.Name}}\n"
kind: ConfigMap
metadata:
  labels:
    app: heimdall
  name: heimdall-templates-4gm6cggt6d
  namespace: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: heimdall
  name: heimdall
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: heimdall
  template:
    metadata:
      labels:
        app: heimdall
    spec:
      containers:
      - args:
        - --json
        env:
        - name: GODEBUG
          value: madvdontneed=1
        image: quay.io/uswitch/heimdall
        name: heimdall
        resources:
          limits:
            memory: 130Mi
          requests:
            cpu: 5m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /templates
          name: templates
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: heimdall
      volumes:
      - configMap:
          name: heimdall-templates-4gm6cggt6d
        name: templates
