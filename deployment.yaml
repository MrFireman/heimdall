---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heimdall
  namespace: kube-system
  labels:
    app: heimdall
spec:
  replicas: 1
  selector:
    matchLabels:
      app: heimdall
  template:
    metadata:
      labels:
        app: heimdall
    spec:
      serviceAccountName: heimdall
      containers:
      - name: heimdall
        image: quay.io/uswitch/heimdall:v0.5.3
        args:
        - --json
        resources:
          requests:
            cpu: 5m
            memory: 20Mi
          limits:
            memory: 130Mi
        volumeMounts:
        - name: templates
          mountPath: /templates
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - all
      volumes:
      - name: templates
        configMap:
          name: heimdall-templates
      nodeSelector:
        beta.kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: heimdall
  name: heimdall-templates
  namespace: kube-system
data:
  5xx-rate.tmpl: |
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      name: {{.Namespace}}-{{.Name}}-5xx-rate
      namespace: ingress
      labels:
        role: alert-rules
    spec:
      groups:
      - name: {{.Namespace}}-{{.Name}}-5xx-rate.rules
        rules:
        - alert: {{.Name}}-5xx-rate
          annotations:
            summary: |
              {{.Identifier}}: 5xx proportion above {{.Threshold}} for 1m
          expr: |
            (
              sum(
                rate(
                  nginx_ingress_controller_requests{exported_namespace="{{.Namespace}}",ingress="{{.Name}}",status=~"5.."}[30s]
                )
              )
              /
              sum(
                rate(
                  nginx_ingress_controller_requests{exported_namespace="{{.Namespace}}",ingress="{{.Name}}"}[30s]
                )
              )
            ) > {{.Threshold}}
          for: 1m
          labels:
            identifier: {{.Identifier}}
            name: {{.Name}}-5xx-rate
            namespace: {{.Namespace}}
  5xx-rate-deployment.tmpl: |
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: PrometheusRule
    metadata:
      name: {{.Namespace}}-{{.Name}}-5xx-rate-deployment
      namespace: {{.Namespace}}
      labels:
        role: alert-rules
    spec:
      groups:
      - name: {{.Namespace}}-{{.Name}}-5xx-rate.rules
        rules:
        - alert: {{.Name}}-5xx-rate
          annotations:
            summary: |
              {{.Identifier}}: 5xx proportion above {{.Threshold}} for 1m
          expr: |
            (
              sum(
                rate(
                  http_requests_total{namespace="{{.Namespace}}",app="{{.Name}}",status=~"5.."}[30s]
                )
              )
              /
              sum(
                rate(
                  http_requests_total{namespace="{{.Namespace}}",app="{{.Name}}"}[30s]
                )
              )
            ) > {{.Threshold}}
          for: 1m
          labels:
            identifier: {{.Identifier}}
            name: {{.Name}}-5xx-rate
            namespace: {{.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  metadata:
  labels:
    app: heimdall
  name: system:heimdall
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheusrules
  verbs:
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  metadata:
  labels:
    app: heimdall
  name: heimdall
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  metadata:
  labels:
    app: heimdall
  name: system:heimdall
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:heimdall
subjects:
- kind: ServiceAccount
  name: heimdall
  namespace: kube-system
